---
import Ganador from "./Ganador.astro";
---

<!-- üß± Estructura general del carrusel -->
<div class="relative">
  <main class="container-carrusel w-full z-20 relative">
    <!-- üé® Degradados laterales para el efecto de carrusel -->
    <div
      class="absolute top-0 left-0 h-full w-1/5 bg-gradient-to-r from-black to-transparent z-30 pointer-events-none"
    >
    </div>
    <div
      class="absolute top-0 right-0 h-full w-1/5 bg-gradient-to-l from-black to-transparent z-30 pointer-events-none"
    >
    </div>

    <!-- üîΩ Flecha decorativa en la parte inferior -->
    <div class="absolute bottom-2 z-30 right-1/2 h-full translate-x-1/2">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="icon icon-tabler icons-tabler-outline icon-tabler-arrow-narrow-down"
      >
        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
        <path d="M12 5l0 14"></path>
        <path d="M16 15l-4 4"></path>
        <path d="M8 15l4 4"></path>
      </svg>
    </div>

    <!-- üß© Componente Ganador + Secci√≥n Carrusel -->
    <Ganador />
    <section class="carrusel flex flex-row">
      <!-- üéØ Grupo inicial de jugadores (est√°tico) -->
      <div class="grupo flex-row flex" id="1">
        <div class="player">
          <h2 class="nombre">Benjam√≠n</h2><span class="apellido">Aguilera</span>
        </div>
        <div class="player">
          <h2 class="nombre">Yoel</h2><span class="apellido">Brizuela</span>
        </div>
        <div class="player">
          <h2 class="nombre">Ignacio</h2><span class="apellido">Castillo</span>
        </div>
        <div class="player">
          <h2 class="nombre">Naara</h2><span class="apellido">Duarte</span>
        </div>
        <div class="player">
          <h2 class="nombre">Joaqu√≠n</h2><span class="apellido">Paniagua</span>
        </div>
        <div class="player">
          <h2 class="nombre">Milagros</h2><span class="apellido"
            >Fern√°ndez</span>
        </div>
        <div class="player">
          <h2 class="nombre">Marcos</h2><span class="apellido">Gauto</span>
        </div>
        <div class="player">
          <h2 class="nombre">Nicol√°s</h2><span class="apellido">Erazo</span>
        </div>
        <div class="player">
          <h2 class="nombre">Ramiro</h2><span class="apellido">Rojas</span>
        </div>
        <div class="player">
          <h2 class="nombre">Cristian</h2><span class="apellido">Rojas</span>
        </div>
        <div class="player">
          <h2 class="nombre">Esteban</h2><span class="apellido"
            >Barrientos</span>
        </div>
      </div>

      <!-- ‚öôÔ∏è Grupo generado din√°micamente (se reemplaza cuando se sale del carrusel) -->
      <div class="grupo flex-row flex" id="2">
        <!-- mismo contenido est√°tico por ahora -->
      </div>
    </section>
  </main>
</div>

<!-- üíÖ Estilos del carrusel -->
<style>
  .container-carrusel {
    overflow: hidden;
    white-space: nowrap;
    max-width: 90%;
    place-self: center;
    border-radius: 2px;
  }

  @keyframes scroll {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-5000%);
    }
  }

  .animation-slide {
    animation: scroll 2s forwards;
    animation-timing-function: cubic-bezier(0, -0.17, 0, 1.01);
  }
</style>

<!-- üß† L√≥gica del carrusel -->
<script>
  // üìå Lista de jugadores
  const jugadoresData = [
    { nombre: "Benjam√≠n", apellido: "Aguilera" },
    { nombre: "Yoel", apellido: "Brizuela" },
    { nombre: "Ignacio", apellido: "Castillo" },
    { nombre: "Naara", apellido: "Duarte" },
    { nombre: "Joaqu√≠n", apellido: "Paniagua" },
    { nombre: "Milagros", apellido: "Fern√°ndez" },
    { nombre: "Marcos", apellido: "Gauto" },
    { nombre: "Nicol√°s", apellido: "Erazo" },
    { nombre: "Ramiro", apellido: "Rojas" },
    { nombre: "Cristian", apellido: "Rojas" },
    { nombre: "Esteban", apellido: "Barrientos" },
  ];

  // üîÅ Genera un arreglo con jugadores aleatorios (pueden repetirse)
  function genenrarJugadoresDeManeraAleatoria() {
    let jugadoresAleatoriosData = [];

    for (let i = 0; i < jugadoresData.length; i++) {
      let numeroAleatorio = Math.floor(Math.random() * jugadoresData.length);
      jugadoresAleatoriosData.push(jugadoresData[numeroAleatorio]);
    }

    return jugadoresAleatoriosData;
  }

  // üß± Crear HTML del nuevo grupo de jugadores
  const jugadoresAleatorios = genenrarJugadoresDeManeraAleatoria();

  let htmlGrupoNuevo = `<div class="grupo flex flex-row" id="2">`;

  jugadoresAleatorios.forEach((j, index) => {
    htmlGrupoNuevo += `
      <div class="player">
        <h2 class="nombre${index < 2 ? " titulo" : ""}">${j.nombre}</h2>
        <span class="apellido">${j.apellido}</span>
      </div>
    `;
  });

  htmlGrupoNuevo += `</div>`;

  // üß≠ Verifica si el grupo 1 sali√≥ del √°rea visible y agrega un nuevo grupo
  function ver_coordenadas() {
    const padre = document.querySelector(".container-carrusel");
    const grupo1 = document.getElementById("1");
    const carrusel = document.querySelector(".carrusel");

    if (!padre || !carrusel) return;

    const padre_coords = padre.getBoundingClientRect();
    const grupo1_coords = grupo1.getBoundingClientRect();

    if (padre_coords.left > grupo1_coords.right) {
      grupo1.id = "0";

      const grupo2 = document.getElementById("2");
      if (grupo2) {
        grupo2.id = "1";
      }

      // üîß Crear nodo real a partir del string HTML
      const temp = document.createElement("div");
      temp.innerHTML = htmlGrupoNuevo;
      const nuevoGrupo = temp.firstElementChild;
      nuevoGrupo.id = "2";

      carrusel.appendChild(nuevoGrupo);
    }

    requestAnimationFrame(ver_coordenadas);
  }

  requestAnimationFrame(ver_coordenadas);
</script>
